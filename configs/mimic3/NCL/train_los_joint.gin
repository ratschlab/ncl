import data.loader
import model.architectures.critics
import model.architectures.encoders
import model.architectures.losses
import model.architectures.optimizers
import model.architectures.transformations
import model.methods.semi_supervised


MOMENTUM = 0.999
WINDOW = 16
ALPHA = 1.0
TEMPERATURE = 0.1
SDO = 0.2
TC = 0.5
GB = 0.1
TCO_PROBA = 0.8
TCO_SIZE = 8

# Parameters for d1/composition:
# ==============================================================================
d1/composition.functions = [ @d1/history_cutout, @d1/history_crop, @d1/normal_bias, @d1/spatial_dropout]

# Parameters for d2/composition:
# ==============================================================================
d2/composition.functions = [ @d2/history_cutout, @d2/history_crop, @d1/normal_bias, @d2/spatial_dropout]

# Parameters for ICU_loader_semi_temporal:
# ==============================================================================
ICU_loader_omega_SCL.batch_size = 1024
ICU_loader_omega_SCL.data_path = './data/preprocess/mimic3_resources/scaled.h5'
ICU_loader_omega_SCL.task = 'los'
ICU_loader_omega_SCL.nb_variables = -1
ICU_loader_omega_SCL.on_RAM = True
ICU_loader_omega_SCL.sampling_method = 'ps'
ICU_loader_omega_SCL.shuffle = True
ICU_loader_omega_SCL.step_size = 1
ICU_loader_omega_SCL.window_size = 48
ICU_loader_omega_SCL.semi = True
ICU_loader_omega_SCL.temporal_window =  -1

# Parameters for model:
# ==============================================================================
model.dataset = @ICU_loader_omega_SCL()
model.gen_type = 'iterate'
model.model = @momentum_semi_supervised()
model.monitoring_config = {'frequency': 1000, 'steps': 50}
model.training_steps_global = 50001

# Parameters for momentum_NT_X:
# ==============================================================================
momentum_neighbors_NT_X.temperature = %TEMPERATURE
momentum_neighbors_NT_X.alpha = %ALPHA
momentum_neighbors_NT_X.neigh_func = @get_neighbors_nscl_label_multiclass
get_neighbors_nscl_label_multiclass.threshold = %WINDOW

# Parameters for momentum_semi_supervised:
# ==============================================================================
momentum_semi_supervised.encoder = @e/simple_TCN()
momentum_semi_supervised.loss = @momentum_neighbors_NT_X
momentum_semi_supervised.momentum = %MOMENTUM
momentum_semi_supervised.momentum_encoder = @me/simple_TCN()
momentum_semi_supervised.optimizer = @Adam()
momentum_semi_supervised.projection_size = 64
momentum_semi_supervised.queue_size = 65536
momentum_semi_supervised.projector=@e/non_linear_projector()
momentum_semi_supervised.momentum_projector=@me/non_linear_projector()
momentum_semi_supervised.transformations = [@d1/composition, @d2/composition]
momentum_semi_supervised.label_size = 3
momentum_semi_supervised.labels_bin = [24,48,72,96,120,144,168,192,336]

# Parameters for e/non_linear_projector:
# ==============================================================================
e/non_linear_projector.embedding_size = 64
e/non_linear_projector.projection_size = 64


# Parameters for me/non_linear_projector:
# ==============================================================================
me/non_linear_projector.embedding_size = 64
me/non_linear_projector.projection_size = 64

# Parameters for e/simple_TCN:
# ==============================================================================
e/simple_TCN.activation = 'relu'
e/simple_TCN.dilatations = (1, 2, 4, 8, 16)
e/simple_TCN.do = 0.0
e/simple_TCN.static_do = 0.5
e/simple_TCN.kernel_size = 2
e/simple_TCN.n_filter = 64
e/simple_TCN.n_stack = 1
e/simple_TCN.n_static = 1
e/simple_TCN.use_LN = True
e/simple_TCN.use_skip = False
e/simple_TCN.input_shape = (None, 48, 42)


# Parameters for me/simple_TCN:
# ==============================================================================
me/simple_TCN.activation = 'relu'
me/simple_TCN.dilatations = (1, 2, 4, 8, 16)
me/simple_TCN.do = 0.0
me/simple_TCN.static_do = 0.5
me/simple_TCN.kernel_size = 2
me/simple_TCN.n_filter = 64
me/simple_TCN.n_stack = 1
me/simple_TCN.n_static = 1
me/simple_TCN.use_LN = True
me/simple_TCN.use_skip = False
me/simple_TCN.input_shape = (None, 48, 42)

spatial_dropout.rate = %SDO
normal_bias.std = %GB
history_cutout.p = %TCO_PROBA
history_cutout.size = %TCO_SIZE
history_crop.p = %TC


Adam.learning_rate = @LinearWarmupCosineDecay()
LinearWarmupCosineDecay.initial_learning_rate = 1e-5
LinearWarmupCosineDecay.warmup_steps = 5000
LinearWarmupCosineDecay.warm_learning_rate  = 1e-3
LinearWarmupCosineDecay.decay_steps = 45001
